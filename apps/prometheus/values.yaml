kube-prometheus-stack:
  prometheus-node-exporter:
    tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
  alertmanager:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme-letsencrypt-prod
        hajimari.io/appName: "Alert Manager"
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/name: Alert Manager
      hosts:
        - alertmanager.h.g4v.dev
      tls:
        - secretName: alertmanager-tls-certificate
          hosts:
            - alertmanager.h.g4v.dev
    config:
      receivers:
        - name: 'null'
        - name: 'discord'
          slack_configs:
          - channel: '#prometheus'
            icon_url: https://avatars3.githubusercontent.com/u/3380462
            username: 'Prometheus'
            send_resolved: true
            # https://github.com/onedr0p/home-cluster/blob/main/cluster/apps/monitoring/kube-prometheus-stack/helm-release.yaml#L33
            title: |-
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}
            text: >-
              {{ range .Alerts -}}
                **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} `{{ .Labels.severity }}`{{ end }}
              {{ if ne .Annotations.summary ""}}**Summary:** {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}**Message:** {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}**Description:** {{ .Annotations.description }}{{ end }}
                **Details:**
                {{ range .Labels.SortedPairs }} â€¢ {{ .Name }}: `{{ .Value }}`
                {{ end }}
              {{ end }}
      route:
        group_by: ['alertname', 'job']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 6h
        receiver: 'discord'
        routes:
        - receiver: 'null'
          matchers:
          - severity =~ "none"
        - receiver: 'discord'
  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme-letsencrypt-prod
        hajimari.io/appName: Prometheus
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/name: Prometheus
      hosts:
        - prometheus.h.g4v.dev
      tls:
        - secretName: prometheus-tls-certificate
          hosts:
            - prometheus.h.g4v.dev
  grafana:
    enabled: true
    #defaultDashboardsTimezone: America/Vancouver
    #defaultDashboardsEditable: false
    ingress:
      enabled: true
      annotations:
        hajimari.io/appName: Grafana
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/name: Grafana
      hosts:
        - grafana.h.g4v.dev
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: false
          options:
            path: /var/lib/grafana/dashboards/default
    plugins:
      - grafana-piechart-panel
    dashboards:
      default:
        prometheus:
          gnetId: 3662
          revision: 2
          datasource: Prometheus
        node-exporter-full:
          gnetId: 1860
          revision: 28
          datasource: Prometheus
        kubernetes-cluster-monitoring-315:
          gnetId: 315
          revision: 3
          datasource: Prometheus
        kubernetes-capacity:
          gnetId: 5228
          revision: 6
          datasource: Prometheus
        kubernetes-node-resource-consumption:
          gnetId: 8739
          revision: 3
          datasource: Prometheus
        kubernetes-cluster:
          gnetId: 7249
          revision: 1
          datasource: Prometheus
        cluster-health:
          gnetId: 10000
          revision: 1
          datasource: Prometheus
        cert-manager:
          gnetId: 11001
          revision: 1
          datasource: Prometheus
        nut:
          gnetId: 14371
          revision: 1
          datasource: Prometheus
        kube-state-metrics-v2:
          gnetId: 13332
          revision: 12
          datasource: Prometheus
        alertmanager:
          gnetId: 9578
          revision: 4
          datasource: Prometheus
        go-processes:
          gnetId: 6671
          revision: 2
          datasource: Prometheus
        go-metrics:
          gnetId: 10826
          revision: 1
          datasource: Prometheus
        traefik:
          gnetId: 4475
          revision: 5
          datasource: Prometheus
        radarr:
          gnetId: 12896
          revision: 1
          datasource: Prometheus
        sonarr:
          gnetId: 12530
          revision: 1
          datasource: Prometheus
        adguard:
          gnetId: 13330
          revision: 3
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    env:
      GF_DEFAULT_INSTANCE_NAME: grafana-home
      GF_SERVER_ROOT_URL: https://grafana.h.g4v.dev
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      GF_AUTH_BASIC_ENABLED: "false"
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_USERS_AUTO_ASSIGN_ORG: "true"
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: Viewer

  kubeProxy:
    enabled: false
  defaultRules:
    rules:
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
  prometheusOperator:
    kubeletService:
      name: kubelet
      enabled: false
