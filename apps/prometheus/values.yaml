kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme-letsencrypt-prod
        hajimari.io/appName: "Alert Manager"
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/name: Alert Manager
      hosts:
        - alertmanager.h.g4v.dev
      tls:
        - secretName: alertmanager-tls-certificate
          hosts:
            - alertmanager.h.g4v.dev
    route:
      receiver: "null"
      routes:
        - receiver: 'null'
          matchers:
            - alertname = "Watchdog"
        - receiver: discord
          matchers:
            - severity = "page"
        - receiver: discord
          matchers:
            - severity = "critical"
  prometheus:
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme-letsencrypt-prod
        hajimari.io/appName: Prometheus
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/name: Prometheus
      hosts:
        - prometheus.h.g4v.dev
      tls:
        - secretName: prometheus-tls-certificate
          hosts:
            - prometheus.h.g4v.dev
  grafana:
    enabled: true
    defaultDashboardsTimezone: America/Vancouver
    defaultDashboardsEditable: false
    ingress:
      enabled: true
      annotations:
        hajimari.io/appName: Grafana
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Kubernetes
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/name: Grafana
      hosts:
        - grafana.h.g4v.dev
    dashboards:
      default:
        prometheus:
          gnetId: 3662
          revision: 2
          datasource: Prometheus
        node-exporter-full:
          gnetId: 1860
          revision: 28
          datasource: Prometheus
        kubernetes-cluster-monitoring-315:
          gnetId: 315
          revision: 3
          datasource: Prometheus
        kubernetes-capacity:
          gnetId: 5228
          revision: 6
          datasource: Prometheus
        kubernetes-node-resource-consumption:
          gnetId: 8739
          revision: 3
          datasource: Prometheus
        kubernetes-cluster:
          gnetId: 7249
          revision: 1
          datasource: Prometheus
        cluster-health:
          gnetId: 10000
          revision: 1
          datasource: Prometheus
        cert-manager:
          gnetId: 11001
          revision: 1
          datasource: Prometheus
        nut:
          gnetId: 14371
          revision: 1
          datasource: Prometheus
        kube-state-metrics-v2:
          gnetId: 13332
          revision: 12
          datasource: Prometheus
        alertmanager:
          gnetId: 9578
          revision: 4
          datasource: Prometheus
        go-processes:
          gnetId: 6671
          revision: 2
          datasource: Prometheus
        go-metrics:
          gnetId: 10826
          revision: 1
          datasource: Prometheus
        traefik:
          gnetId: 4475
          revision: 5
          datasource: Prometheus
        radarr:
          gnetId: 12896
          revision: 1
          datasource: Prometheus
        sonarr:
          gnetId: 12530
          revision: 1
          datasource: Prometheus
        qbittorrent:
          url: https://raw.githubusercontent.com/caseyscarborough/qbittorrent-grafana-dashboard/a27811eadf3d024dc7be3623052cf64cf33d8de8/dashboard-modern.json
          datasource: Prometheus
        adguard:
          gnetId: 13330
          revision: 3
          datasource: Prometheus

      env:
        GF_DEFAULT_INSTANCE_NAME: grafana-home
        GF_SERVER_ROOT_URL: https://grafana.h.g4v.dev
        GF_AUTH_ANONYMOUS_ENABLED: "false"
        GF_AUTH_DISABLE_LOGIN_FORM: "true"
        GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
        GF_AUTH_BASIC_ENABLED: "false"
        GF_USERS_ALLOW_SIGN_UP: "false"
        GF_USERS_AUTO_ASSIGN_ORG: "true"
        GF_USERS_AUTO_ASSIGN_ORG_ROLE: Viewer

        GF_PANELS_ENABLE_ALPHA: "true"
        GF_PLUGINS_ENABLE_ALPHA: "true"

        GF_AUTH_GENERIC_OAUTH_ENABLED: "true"
        GF_AUTH_GENERIC_OAUTH_NAME: "g4v"
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid profile email"
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.g4v.dev/application/o/authorize/"
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.g4v.dev/application/o/token/"
        GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.g4v.dev/application/o/userinfo/"
        GF_AUTH_SIGNOUT_REDIRECT_URL: "https://auth.g4v.dev/application/o/grafana/end-session/"
        # Optionally enable auto-login (bypasses Grafana login screen)
        GF_AUTH_OAUTH_AUTO_LOGIN: "true"
        # Optionally map user groups to Grafana roles
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"

  kubeProxy:
    enabled: false
  defaultRules:
    rules:
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
  prometheusOperator:
    kubeletService:
      name: kubelet
      enabled: false
