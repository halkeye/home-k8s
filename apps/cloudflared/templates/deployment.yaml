apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount | int }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
      annotations:
        checksum/tunnel-id: {{ sha256sum .Values.tunnelID }}
        checksum/ingress: {{ .Values.ingress | toJson | sha256sum }}
        checksum/auth: {{ .Values.auth | toJson | sha256sum }}
        checksum/warp-routing: {{ .Values.warpRouting | toJson | sha256sum }}
    spec:
      containers:
      - name: cloudflared
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy }}
        args:
          - tunnel
          - --no-autoupdate
          - --config
          - /etc/cloudflared/config.yaml
          - run
        livenessProbe:
          httpGet:
            # Cloudflared has a /ready endpoint which returns 200 if and only if
            # it has an active connection to the edge.
            path: /ready
            port: 2000
          failureThreshold: 1
          initialDelaySeconds: 10
          periodSeconds: 10
        volumeMounts:
          - name: config
            mountPath: /etc/cloudflared/config
            readonly: true
          - name: creds
            mountPath: /etc/cloudflared/creds
            readOnly: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: creds
          secret:
            # By default, the credentials file will be created under ~/.cloudflared/<tunnel ID>.json
            # when you run `cloudflared tunnel create`. You can move it into a secret by using:
            # ```sh
            # kubectl create secret generic tunnel-credentials \
            # --from-file=credentials.json=/Users/yourusername/.cloudflared/<tunnel ID>.json
            # ```
            name: {{ .Release.Name }}-creds
        # Create a config.yaml file from the ConfigMap below.
        - name: config
          configMap:
            name: {{ .Release.Name }}-configmap
            items:
            - key: config.yaml
              path: config.yaml
