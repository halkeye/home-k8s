app-template:
  controllers:
    main:
      containers:
        main:
          image:
            repository: gotson/komga
            tag: 1.10.1
          env:
            TZ: America/Vancouver
            SERVER_PORT: &port 8080
          resources:
            requests:
              memory: 250Mi
              cpu: 500m
            limits:
              memory: 1500Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities: { drop: ["ALL"] }
      pod:
        securityContext:
          runAsUser: 1026
          runAsGroup: 100
          runAsNonRoot: true
          fsGroup: 100
          fsGroupChangePolicy: OnRootMismatch
  service:
    main:
      ports:
        http:
          port: *port
  secrets:
    secret:
      enabled: true
      stringData:
        application.yml: |-
          ---
          logging:
            file:
              name: /data/logs/komga.log
          komga:
            database:
              file: /data/database.sqlite
            config-dir: /data
            lucene:
              data-directory: /data/lucene
            tasks-db:
              file: /data/tasks.sqlite
            delete-empty-collections: true
            delete-empty-read-lists: true
          server:
            servlet:
              session.timeout: 7d # session timeout, here 7 days
              context-path: /
          spring:
            security:
              oauth2:
                client:
                  registration:
                    keycloak:
                      provider: authentik # this must match the provider below
                      client-id: {{.Values.oauth.clientId}}
                      client-secret: {{.Values.oauth.clientSecret}}
                      client-name: Oauth
                      scope: openid,email
                      authorization-grant-type: authorization_code
                      # the placeholders in {} will be replaced automatically, you don't need to change this line
                      redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
                  provider:
                    authentik: # this must match the provider above
                      user-name-attribute: preferred_username
                      # either set the issuer-uri, in which case the app will lookup the configuration for you automatically
                      issuer-uri: https://auth.g4v.dev/application/o/komga/
  ingress:
    main:
      enabled: true
      annotations:
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/komga.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Media
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/komga.png
        gethomepage.dev/name: Komga
      hosts:
        - host: &host "komga.g4v.dev"
          paths:
            - path: /
              service:
                name: main
                port: http
  persistence:
    config:
      enabled: true
      type: secret
      name: "{{ .Release.Name }}-secret"
    data:
      enabled: true
      type: persistentVolumeClaim
      storageClass: synology-iscsi
      accessMode: ReadWriteOnce
      size: 1Gi
    books:
      type: nfs
      server: 172.16.10.10
      path: /volume1/Books
      globalMounts:
        - path: /books
    comics:
      type: nfs
      server: 172.16.10.10
      path: /volume1/Comics
      globalMounts:
        - path: /comics
