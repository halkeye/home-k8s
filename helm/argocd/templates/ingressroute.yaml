{{- $insecure := index (index .Values "argo-cd").configs.params "server.insecure" | toString -}}
{{- $servicePort := eq $insecure "true" | ternary (index .Values "argo-cd").server.service.servicePortHttp (index .Values "argo-cd").server.service.servicePortHttps -}}
{{- $fullName := (include "argo-cd.server.fullname" (dict "Chart" .Chart "Release" .Release "Values" (index .Values "argo-cd"))) -}}
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ $fullName }}
  namespace: {{ include  "argo-cd.namespace" (dict "Chart" .Chart "Release" .Release "Values" (index .Values "argo-cd")) }}
  labels:
    {{- include "argo-cd.labels" (dict "context" (dict "Chart" .Chart "Release" .Release "Values" (index .Values "argo-cd")) "component" (index .Values "argo-cd").server.name "name" (index .Values "argo-cd").server.name) | nindent 4 }}
    {{- with (index .Values "argo-cd").server.ingress.labels }}
      {{- tpl (toYaml .) $ | nindent 4 }}
    {{- end }}
  {{- with (index .Values "argo-cd").server.ingress.annotations }}
  annotations:
    {{- range $key, $value := . }}
    {{ $key }}: {{ tpl $value $ | quote }}
    {{- end }}
  {{- end }}
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`argocd.h.g4v.dev`)
      priority: 10
      services:
        - name: {{ $fullName }}
          port: {{ $servicePort }}
    - kind: Rule
      match: Host(`argocd.h.g4v.dev`) && Headers(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - name: {{ $fullName }}
          port: {{ $servicePort }}
          scheme: h2c
