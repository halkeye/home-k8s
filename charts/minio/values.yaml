---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/library/common/values.schema.json
defaultPodOptions:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    runAsNonRoot: true
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"

controllers:
  minio:
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: quay.io/minio/minio
          tag: RELEASE.2025-02-28T09-55-16Z
        env:
          MINIO_API_CORS_ALLOW_ORIGIN: https://minio.g4v.dev,https://s3.g4v.dev
          MINIO_BROWSER_REDIRECT_URL: https://minio.g4v.dev
          MINIO_PROMETHEUS_JOB_ID: minio
          MINIO_PROMETHEUS_URL: https://prometheus.h.g4v.dev
          MINIO_PROMETHEUS_AUTH_TYPE: public
          MINIO_SERVER_URL: https://s3.g4v.dev
          MINIO_STORAGE_CLASS_RRS: EC:0
          MINIO_STORAGE_CLASS_STANDARD: EC:0
          MINIO_UPDATE: "off"
        envFrom:
          - secretRef:
              name: minio-secret
        args: ["server", "/data", "--console-address", ":9001"]
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /minio/health/live
                port: 9000
              initialDelaySeconds: 30
              periodSeconds: 30
              timeoutSeconds: 10
              failureThreshold: 6
          readiness: *probes
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2Gi

service:
  app:
    controller: minio
    ports:
      http:
        port: 9001
      s3:
        port: 9000
serviceMonitor:
  app:
    serviceName: minio
    endpoints:
      - port: s3
        scheme: http
        path: /minio/v2/metrics/cluster
        interval: 1m
        scrapeTimeout: 10s
ingress:
  app:
    hosts:
      - host: minio.g4v.dev
        paths:
          - path: /
            service:
              identifier: app
              port: http
      - host: s3.g4v.dev
        paths:
          - path: /
            service:
              identifier: app
              port: s3

persistence:
  data:
    enabled: true
    type: persistentVolumeClaim
    storageClass: nas-apps
    accessMode: ReadWriteOnce
    size: 50Gi
