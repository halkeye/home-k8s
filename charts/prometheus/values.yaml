authentik: {}
kube-prometheus-stack:
  crds:
    enabled: false
  alertmanager:
    ingress:
      enabled: true
      annotations:
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/name: Alert Manager
      hosts:
        - alertmanager.h.g4v.dev
    alertmanagerSpec: {}
    tplConfig: true
    stringConfig: |-
      templates:
        - /etc/alertmanager/config/*.tmpl
      receivers:
        - name: 'null'
        - name: 'discord'
          discord_configs:
            - webhook_url: {{ .Values.discord_api_url | quote }}
              send_resolved: true
              title: |-
                {{`[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}`}}
              message: >-
                {{`{{ range .Alerts -}}`}}
                {{"  **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} `{{ .Labels.severity }}`{{ end }}"}}
                {{`{{ if ne .Annotations.summary ""}}**Summary:** {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}**Message:** {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}**Description:** {{ .Annotations.description }}{{ end }}`}}
                {{`  **Details:**`}}
                {{"  {{ range .Labels.SortedPairs }} â€¢ {{ .Name }}: `{{ .Value }}`"}}
                {{`  {{ end }}`}}
                {{`{{ end }}`}}
      route:
        receiver: 'discord'
        routes:
          - receiver: "null"
            matchers:
            - alertname="Watchdog"
            continue: false
          - receiver: 'null'
            matchers:
            - severity =~ "none"
          - receiver: 'discord'
      inhibit_rules:
        - source_matchers:
          - severity="critical"
          target_matchers:
          - severity=~"warning|info"
          equal:
          - namespace
          - alertname
        - source_matchers:
          - severity="warning"
          target_matchers:
          - severity="info"
          equal:
          - namespace
          - alertname
        - source_matchers:
          - alertname="InfoInhibitor"
          target_matchers:
          - severity="info"
          equal:
          - namespace
        - target_matchers:
          - alertname="InfoInhibitor"
  prometheus:
    enabled: true
    prometheusSpec:
      enableAdminAPI: true
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 10Gi
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: minio-job
          bearer_token: '{{ .Values.minio_bearer_token }}'
          metrics_path: /minio/v2/metrics/cluster
          scheme: http
          static_configs:
            - targets: ['172.16.10.10:9000']
        - job_name: nas-syncthing-job
          bearer_token: '{{ .Values.nas_syncthings_key }}'
          scheme: https
          static_configs:
            - targets: ['syncthing.nas.g4v.dev']
        - job_name: traefik
          static_configs:
            - targets: ['traefik.nas.g4v.dev:8000']
        - job_name: nas-node
          scheme: https
          static_configs:
            - targets: ['node-exporter.nas.g4v.dev:443']
        - job_name: nas-cadvisor
          scheme: https
          static_configs:
            - targets: ['cadvisor.nas.g4v.dev:443']
        - job_name: nas-smartctl
          scheme: https
          static_configs:
            - targets: ['smartctl-exporter.nas.g4v.dev:443']
        - job_name: 'homeassistant'
          scrape_interval: 60s
          metrics_path: /api/prometheus
          authorization:
            credentials: '{{ .Values.homeassistant_key }}'
          scheme: http
          static_configs:
            - targets: ['homeassistant.dhcp.home:8123']
    ingress:
      enabled: true
      annotations:
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/name: Prometheus
      hosts:
        - prometheus.h.g4v.dev
  grafana:
    enabled: false
  defaultRules:
    disabled:
      # my limits are bad anyways, so don't alert me cause i went over
      KubeMemoryOvercommit: true
      KubeMemoryQuotaOvercommit: true
    rules:
      etcd: false
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
  prometheus-node-exporter:
    resources:
      requests:
        cpu: 23m
        memory: 64M
      limits:
        memory: 64M
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node

    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance

    kubeProxy:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeScheduler:
      enabled: false

    kubeStateMetrics:
      metricLabelsAllowlist:
        - "persistentvolumeclaims=[*]"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node

