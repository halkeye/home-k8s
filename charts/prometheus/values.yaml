authentik: {}
kube-prometheus-stack:
  kubelet:
    enabled: false
  prometheus-node-exporter:
    tolerations:
      - effect: NoSchedule
        operator: Exists
      - effect: NoExecute
        operator: Exists
  alertmanager:
    ingress:
      enabled: true
      annotations:
        hajimari.io/appName: "Alert Manager"
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/alertmanager.png
        gethomepage.dev/name: Alert Manager
      hosts:
      - alertmanager.h.g4v.dev
    alertmanagerSpec: {}
  prometheus:
    enabled: true
    prometheusSpec:
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
      additionalScrapeConfigs:
        - job_name: qbittorrent
          scheme: https
          metrics_path: /metrics
          static_configs:
          - targets: ['qbittorrent-exporter.nas.g4v.dev']
        - job_name: nzbget
          scheme: https
          metrics_path: /metrics
          static_configs:
          - targets: ['nzbget-exporter.nas.g4v.dev']
        - job_name: plex
          scheme: https
          metrics_path: /metrics
          static_configs:
          - targets: ['plex-exporter.nas.g4v.dev']
        - job_name: adguard
          scheme: https
          metrics_path: /metrics
          static_configs:
          - targets: ['adguard-exporter.nas.g4v.dev']
        - job_name: minio-job
          bearer_token: '{{ .Values.minio_bearer_token }}'
          metrics_path: /minio/v2/metrics/cluster
          scheme: http
          static_configs:
          - targets: ['172.16.10.10:9000']
        - job_name: nas-syncthing-job
          bearer_token: '{{ .Values.nas_syncthings_key }}'
          scheme: https
          static_configs:
          - targets: ['syncthing.nas.g4v.dev']
    ingress:
      enabled: true
      annotations:
        hajimari.io/appName: Prometheus
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/prometheus.png
        gethomepage.dev/name: Prometheus
      hosts:
        - prometheus.h.g4v.dev
  grafana:
    enabled: true
    podAnnotations:
      reloader.stakater.com/auto: "true"
    ingress:
      enabled: true
      annotations:
        hajimari.io/appName: Grafana
        hajimari.io/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/grafana.png
        gethomepage.dev/name: Grafana
      hosts:
        - grafana.h.g4v.dev
    resources:
      requests:
        cpu: 23m
        memory: 127M
      limits:
        memory: 219M
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
        - name: "default"
          orgId: 1
          folder: "default"
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
        - name: data
          orgId: 1
          folder: Data
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/data
        - name: storage
          orgId: 1
          folder: Storage
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/storage
        - name: mediafetchers
          orgId: 1
          folder: Media Fetchers
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/mediafetchers
        - name: kubernetes
          orgId: 1
          folder: Kubernetes
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/kubernetes
        - name: network
          orgId: 1
          folder: Network
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/network
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Prometheus
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            uid: prometheus
            isDefault: false
            access: proxy
            url: http://prometheus-operated.monitoring.svc.cluster.local:9090
            jsonData:
              prometheusType: Prometheus
          - name: Alertmanager
            type: alertmanager
            isDefault: false
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      storage:
        minio:
          # renovate: depName="MinIO Dashboard"
          gnetId: 13502
          revision: 25
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        syncthing:
          # renovate: depName="Syncthing"
          gnetId: 19560
          revision: 1
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
      mediafetchers:
        radarr:
          # renovate: depName="Radarr v3"
          gnetId: 12896
          revision: 1
          datasource: Prometheus
        sonarr:
          # renovate: depName="Sonarr v3"
          gnetId: 12530
          revision: 2
          datasource: Prometheus
        exportarr:
          url: https://raw.githubusercontent.com/onedr0p/exportarr/933ed39eba6ecbadfec8d7a9f9f71a07c05d56cb/examples/grafana/dashboard2.json
          token: ''
      data:
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/charts/c939e3e114ae4c3a5b7190577aeae6c625ef8d48/charts/cloudnative-pg/monitoring/grafana-dashboard.json
          datasource: Prometheus
        prometheus:
          # renovate: depName="Prometheus"
          gnetId: 19105
          revision: 3
          datasource: Prometheus
      kubernetes:
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 16761
          revision: 1
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 17
          datasource: Prometheus
        kubernetes-global:
          # renovate: depName="Kubernetes / Views / Global"
          gnetId: 15757
          revision: 37
          datasource: Prometheus
        kubernetes-namespaces:
          # renovate: depName="Kubernetes / Views / Namespaces"
          gnetId: 15758
          revision: 34
          datasource: Prometheus
        kubernetes-nodes:
          # renovate: depName="Kubernetes / Views / Nodes"
          gnetId: 15759
          revision: 29
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gNetId: 15760
          revision: 21
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus
        node-exporter-full:
          # renovate: depName="Node Exporter Full"
          gnetId: 1860
          revision: 33
          datasource: Prometheus
        node-feature-discovery:
          url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
          datasource: Prometheus
      network:
        blackbox-exporter:
          # renovate: depName="Prometheus Blackbox Exporter"
          gnetId: 7587
          revision: 3
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        adguard:
          # renovate: depName="Adguard Exporter"
          gnetId: 13330
          revision: 3
          datasource: Prometheus
        unifi-insights:
          # renovate: depName="UniFi-Poller: Client Insights - Prometheus"
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        cloudflared:
          # renovate: depName="Cloudflare Tunnels (cloudflared)"
          gnetId: 17457
          revision: 6
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        external-dns:
          # renovate: depName="External-dns"
          gnetId: 15038
          revision: 3
          datasource: Prometheus
        speedtest-exporter-hub:
          # renovate: depName="Speedtest Exporter"
          gnetId: 16541
          revision: 1
          datasource:
            - name: datasource
              value: Prometheus
        unifi-network-sites:
          # renovate: depName="UniFi-Poller: Network Sites - Prometheus"
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap:
          # renovate: depName="UniFi-Poller: UAP Insights - Prometheus"
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-usw:
          # renovate: depName="UniFi-Poller: USW Insights - Prometheus"
          gnetId: 11312
          revision: 9
          datasource: Prometheus
      default:
        nut:
          url: https://raw.githubusercontent.com/halkeye/home-k8s/main/charts/prometheus/dashboards/nut-exporter.json
          datasource:
            - name: DS_PROMETHEUS
              value: Prometheus
        alertmanager:
          # renovate: depName="Alertmanager"
          gnetId: 9578
          revision: 4
          datasource: Prometheus
        traefik:
          # renovate: depName="Traefik"
          gnetId: 4475
          revision: 5
          datasource: Prometheus
        argocd:
          # renovate: depName="ArgoCD"
          gnetId: 14584
          revision: 1
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL
    env:
      GF_DEFAULT_INSTANCE_NAME: grafana-home
      GF_SERVER_ROOT_URL: https://grafana.h.g4v.dev
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
    envFromSecret: grafana-secrets
    grafana.ini:
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: true
      security:
        disable_initial_admin_creation: true
      news:
        news_feed_enabled: false
      auth:
        disable_login_form: true
        signout_redirect_url: https://auth.g4v.dev/application/o/grafana/end-session/
        oauth_allow_insecure_email_lookup: true
      auth.anonymous:
        enabled: false
        org_name: Main Org.
        org_role: Viewer
        hide_version: true
      auth.generic_oauth:
        auto_login: true
        name: authentik
        enabled: true
        scopes: openid email profile
        auth_url: https://auth.g4v.dev/application/o/authorize/
        token_url: https://auth.g4v.dev/application/o/token/
        api_url: https://auth.g4v.dev/application/o/userinfo/
        # Optionally map user groups to Grafana roles
        role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
  kubeProxy:
    enabled: false
  defaultRules:
    rules:
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
  prometheusOperator:
    kubeletService:
      name: kubelet
      enabled: false
    admissionWebhooks:
      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/hook-delete-policy: HookSucceeded
      patch:
        annotations:
          argocd.argoproj.io/hook: PreSync
          argocd.argoproj.io/hook-delete-policy: HookSucceeded
