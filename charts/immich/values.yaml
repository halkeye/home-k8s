# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/common-3.0.1/charts/library/common/values.schema.json
redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false
    usePasswordFiles: false

app-template:
  secrets:
    secret:
      enabled: true
      stringData:
        REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
        DB_HOSTNAME: "postgres-rw.db"
        DB_DATABASE_NAME: "immich"
        IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
        TYPESENSE_API_KEY: different-string-for-now
  service:
    main:
      controller: main
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3001
          protocol: HTTP
    machine-learning:
      controller: machine-learning
      type: ClusterIP
      ports:
        http:
          enabled: true
          primary: true
          port: 3003
          protocol: HTTP

  controllers:
    migrations:
      type: job
      nameOverride: '{{ printf "immich-migrations-%s" (.Values.controllers.migrations.containers.migrations.image.tag | replace "." "-") }}'
      revisionHistoryLimit: 1
      job:
        backoffLimit: 0
        # 2 days
        ttlSecondsAfterFinished: 172800
      containers:
        migrations:
          image:
            repository: ghcr.io/immich-app/immich-server
            pullPolicy: IfNotPresent
            tag: v1.131.2
          env:
            DB_URL:
              valueFrom:
                secretKeyRef:
                  name: immich-immich-user
                  key: DB_LOGGING_URL
          command:
            - npm
            - run
            - typeorm:migrations:run
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-server
            pullPolicy: IfNotPresent
            tag: v1.131.2
          env:
            DB_SKIP_MIGRATIONS: "true"
            IMMICH_TRUSTED_PROXIES: "0.0.0.0"
            IMMICH_PORT: 3001
            REDIS_HOSTNAME:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: REDIS_HOSTNAME
            IMMICH_MACHINE_LEARNING_URL:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: IMMICH_MACHINE_LEARNING_URL
            TYPESENSE_API_KEY:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: TYPESENSE_API_KEY
            DB_URL:
              valueFrom:
                secretKeyRef:
                  name: immich-immich-user
                  key: DB_URL
          probes:
            liveness: &server_probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /server-info/ping
                  port: 3001
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 3
                failureThreshold: 10
            readiness: *server_probes
            startup:
              enabled: false

    machine-learning:
      annotations:
        reloader.stakater.com/auto: "true"
      containers:
        main:
          image:
            repository: ghcr.io/immich-app/immich-machine-learning
            tag: v1.131.2
            pullPolicy: IfNotPresent
          env:
            TRANSFORMERS_CACHE: /cache
            REDIS_HOSTNAME:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: REDIS_HOSTNAME
            IMMICH_MACHINE_LEARNING_URL:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: IMMICH_MACHINE_LEARNING_URL
            TYPESENSE_API_KEY:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: TYPESENSE_API_KEY
            DB_URL:
              valueFrom:
                secretKeyRef:
                  name: immich-immich-user
                  key: DB_URL
          probes:
            liveness: &machine_probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /ping
                  port: 3003
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *machine_probes
            startup:
              enabled: false

    typesense:
      annotations:
        reloader.stakater.com/auto: "true"
      strategy: RollingUpdate
      pod:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kubernetes.io/arch
                      operator: NotIn
                      values:
                        - arm64
      containers:
        main:
          image:
            repository: typesense/typesense
            tag: 0.25.2
            pullPolicy: IfNotPresent
          env:
            TYPESENSE_DATA_DIR: /typesense-data
            TYPESENSE_API_KEY:
              valueFrom:
                secretKeyRef:
                  name: "{{ .Release.Name }}-secret"
                  key: TYPESENSE_API_KEY
          probes:
            liveness: &typesense_probes
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: 8108
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness: *typesense_probes
            startup:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: 8108
                failureThreshold: 30
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1

  persistence:
    machine-learning-cache:
      enabled: true
      # Optional: Set this to pvc to avoid downloading the ML models every start.
      type: emptyDir
      # storageClass: your-class
      advancedMounts:
        machine-learning:
          main:
            - path: /cache
    typesense-data:
      type: emptyDir
      advancedMounts:
        typesense:
          main:
            - path: /typesense-data
    library:
      type: nfs
      server: 172.16.10.10
      path: /volume1/Apps/immich
      globalMounts:
        - path: /usr/src/app/upload
    geocoding-dump:
      type: emptyDir
      globalMounts:
        - path: /usr/src/app/.reverse-geocoding-dump
    transformers-cache:
      type: emptyDir
      globalMounts:
        - path: /usr/src/app/.transformers_cache

  ingress:
    main:
      enabled: true
      annotations:
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Media
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/immich.png
        gethomepage.dev/name: Immich
        # proxy-body-size is set to 0 to remove the body limit on file uploads
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
        - host: &host "immich.g4v.dev"
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
