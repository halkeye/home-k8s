app-template:
  secrets_encryption: ""
  matrix_secret: ""
  secrets_keys: []
  clients_synapse_client_secret: ""
  authentik_client_id: ""
  authentik_client_secret: ""

  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      strategy: Recreate
      initContainers:
        01-init:
          image:
            repository: cirocosta/alpine-envsubst
            tag: latest
          env:
            DB_URI:
              valueFrom:
                secretKeyRef:
                  name: "{{.Release.Name }}-db-secret-{{.Release.Name }}"
                  key: POSTGRES_URL
          command:
            - sh
            - -c
            - |-
              cat /secrets/config.yaml | envsubst > /config/config.yaml
        20-check:
          image:
            repository: ghcr.io/matrix-org/matrix-authentication-service
            tag: sha-206d45b
          env:
            MAS_CONFIG: "/config/config.yaml"
          command:
            - /usr/local/bin/mas-cli
            - config
            - check
        30-migrate:
          image:
            repository: ghcr.io/matrix-org/matrix-authentication-service
            tag: sha-206d45b
          env:
            MAS_CONFIG: "/config/config.yaml"
          command:
            - /usr/local/bin/mas-cli
            - database
            - migrate
        40-config-sync:
          image:
            repository: ghcr.io/matrix-org/matrix-authentication-service
            tag: sha-206d45b
          env:
            MAS_CONFIG: "/config/config.yaml"
          command:
            - /usr/local/bin/mas-cli
            - config
            - sync
      containers:
        main:
          image:
            repository: ghcr.io/matrix-org/matrix-authentication-service
            tag: sha-206d45b
          env:
            TZ: America/Vancouver
            MAS_CONFIG: "/config/config.yaml"
          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /health
                  port: 8081
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            startup:
              enabled: false
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
      pod:
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          fsGroup: 1337
          fsGroupChangePolicy: OnRootMismatch

  service:
    main:
      controller: main
      ports:
        http:
          port: 8080
        internal:
          port: 8081
        metrics:
          port: 9100

  ingress:
    main:
      enabled: true
      annotations:
        gethomepage.dev/enabled: "false"
      hosts:
        - host: matrix-auth.g4v.dev
          paths:
            - path: /
              service:
                identifier: main
                port: http
        - host: matrix.g4v.dev
          paths:
            - path: /_matrix/client/v3/logout
              service:
                identifier: main
                port: http
            - path: /_matrix/client/v3/login
              service:
                identifier: main
                port: http
            - path: /_matrix/client/v3/refresh
              service:
                identifier: main
                port: http

  persistence:
    config:
      enabled: true
      type: emptyDir
    secrets:
      enabled: true
      type: secret
      name: "{{ .Release.Name }}-secret"

  secrets:
    secret:
      enabled: true
      stringData:
        config.yaml: |-
          # Homeserver details.
          http:
            listeners:
              - name: web
                resources:
                  - name: discovery
                  - name: human
                  - name: oauth
                  - name: compat
                  - name: graphql
                    playground: true
                  - name: assets
                binds:
                  - address: '[::]:8080'
                proxy_protocol: false
              - name: internal
                resources:
                  - name: health
                  - name: prometheus
                binds:
                  - address: '[::]:8081'
                proxy_protocol: false
            trusted_proxies:
              - 192.128.0.0/16
              - 172.16.0.0/12
              - 10.0.0.0/10
              - 127.0.0.1/8
              - fd00::/8
              - ::1/128
            public_base: https://matrix-auth.g4v.dev
            issuer: https://matrix-auth.g4v.dev
          clients:
            - client_id: 0000000000000000000SYNAPSE
              client_auth_method: client_secret_basic
              client_secret: {{ .Values.clients_synapse_client_secret | quote }}
          database:
            uri: "$DB_URI"
            max_connections: 10
            min_connections: 0
            connect_timeout: 30
            idle_timeout: 600
            max_lifetime: 1800
          email:
            from: '"Authentication Service" <no-reply@g4v.dev>'
            reply_to: '"Authentication Service" <no-reply@g4v.dev>'
            transport: blackhole
          secrets:
            encryption: {{ .Values.secrets_encryption | quote }}
            keys: {{- .Values.secrets_keys | toYaml | nindent 6 }}
          passwords:
            enabled: true
            schemes:
              - version: 1
                algorithm: argon2id
          matrix:
            homeserver: g4v.dev
            secret: {{ .Values.matrix_secret | quote }}
            endpoint: http://synapse.matrix.svc.cluster.local.:8443
          upstream_oauth2:
            providers:
              - id: 01HFRQFT5QFMJFGF01P7JAV2ME
                human_name: Authentik
                issuer: "https://auth.g4v.dev/application/o/synapse/"
                client_id: {{ .Values.authentik_client_id | quote }}
                client_secret: {{ .Values.authentik_client_secret | quote }}
                token_endpoint_auth_method: "client_secret_jwt"
                token_endpoint_auth_signing_alg: RS256
                scope: "openid profile email"
                claims_imports:
                  localpart:
                    action: require
                    template: {{`"{{ user.preferred_username }}"`}}
                  displayname:
                    action: suggest
                    template: {{`"{{ user.name }}"`}}
                  email:
                    action: suggest
                    template: {{`"{{ user.email }}"`}}
                    set_email_verification: always
