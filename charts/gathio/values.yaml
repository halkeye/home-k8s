app-template:
  controllers:
    gathio:
      strategy: Recreate
      containers:
        gathio:
          image:
            repository: ghcr.io/halkeye/docker-gathio
            tag: v1.4.1.15
          probes:
            liveness: &probes
              enabled: false
            readiness: *probes
            startup: *probes
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              memory: 256Mi
              cpu: 10m
            limits:
              memory: 256Mi
              cpu: 10m
      pod:
        securityContext:
          runAsUser: 568
          runAsGroup: 568
          runAsNonRoot: true
          fsGroup: 568
          fsGroupChangePolicy: OnRootMismatch
  service:
    main:
      controller: gathio
      ports:
        http:
          port: 3000
  ingress:
    main:
      enabled: true
      annotations:
        gethomepage.dev/enabled: "false"
      hosts:
        - host: events.g4v.dev
          paths:
            - path: /
              service:
                identifier: main
                port: http
  persistence:
    configmap:
      enabled: true
      type: secret
      name: "{{ .Release.Name }}-secret"
      globalMounts:
        - path: /app/config/config.toml
          readOnly: true
          subPath: config.toml
    tmp:
      type: emptyDir

  secrets:
    secret:
      enabled: true
      stringData:
        config.toml: |-
          [general]
          # Your domain goes here. If there is a port it should be 'domain.com:port', but
          # otherwise just 'domain.com'.
          domain = "events.g4v.dev"
          port = "3000"
          email = "events@gavinmogan.com"
          site_name = "G4V Events"
          is_federated = true
          # Events will be deleted this many days after they have ended. Set to 0 to
          # disable automatic deletion (old events will never be deleted).
          delete_after_days = 14
          # If left blank, this defaults to
          # https://yourdomain.com/images/gathio-email-logo.gif. Set a full URL here to
          # change it to your own logo (or just change the file itself).
          email_logo_url = ""
          # Show a Ko-Fi box to donate money to Raphael (Gathio's creator) on the front
          # page.
          show_kofi = false
          # Show a list of events and groups on the front page which have been marked as
          # 'Display this event/group on the public event/group list'.
          show_public_event_list = false
          # Which mail service to use to send emails to hosts and attendees. Options are
          # 'nodemailer' or 'sendgrid'. Configure settings for this mail
          # service below.
          mail_service = "nodemailer"
          # An array of email addresses which are permitted to create events. If this is
          # empty, anyone can create events.
          # For example:
          # creator_email_addresses = ["test@test.com", "admin@test.com"]
          creator_email_addresses = {{ .Values.creator_email_addresses | toJson }}

          [database]
          # Set up for a locally running MongoDB connection. Change this to
          # 'mongodb://mongo:27017/gathio' for a Dockerised connection.
          mongodb_url = {{ .Values.mongodb_url | quote }}

          [nodemailer]
          smtp_server = {{ .Values.smtp_server | quote }}
          smtp_port = {{ .Values.smtp_port | quote }}
          smtp_username = {{ .Values.smtp_username | quote }}
          smtp_password = {{ .Values.smtp_password | quote }}

          [sendgrid]
          api_key = ""

          # Links to static pages (for example a privacy policy) or an external community page,
          # which will be displayed in the footer.
          # If paths begin with a slash, they are treated as internal and will open the specified
          # Markdown or text file. If they are absolute (begin with https://), they will simply
          # link to the specified URL.

          # [[static_pages]]
          # title = "Privacy Policy"
          # path = "/privacy"
          # filename = "privacy-policy.md"

          # [[static_pages]]
          # title = "External Link"
          # path = "https://example.com"
