kube-prometheus-stack:
  fullnameOverride: "prometheus"
  commonLabels:
    cluster: do-k8s
  crds:
    enabled: false
  cleanPrometheusOperatorObjectNames: true
  kubeApiServer:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  kubelet:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  coreDns:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  prometheusOperator:
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  alertmanager:
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: '500m'
        nginx.ingress.kubernetes.io/whitelist-source-range: "216.71.199.212/32"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/alertmanager.png
        gethomepage.dev/name: Alert Manager
      hosts:
        - alertmanager-do.g4v.dev
    alertmanagerSpec: {}
    tplConfig: true
    stringConfig: |-
      templates:
        - /etc/alertmanager/config/*.tmpl
      receivers:
        - name: 'null'
        - name: 'discord'
          discord_configs:
            - webhook_url: {{ .Values.discord_api_url | quote }}
              send_resolved: true
              title: |-
                {{`[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ if ne .CommonAnnotations.summary ""}}{{ .CommonAnnotations.summary }} {{ else if ne .CommonAnnotations.message ""}}{{ .CommonAnnotations.message }} {{ else if ne .CommonAnnotations.description ""}}{{ .CommonAnnotations.description }} {{ else }}{{ .CommonLabels.alertname }}{{ end }}`}}
              message: >-
                {{`{{ range .Alerts -}}`}}
                {{"  **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} `{{ .Labels.severity }}`{{ end }}"}}
                {{"  **Graph:** <{{ .GeneratorURL }}|:chart_with_upwards_trend:> "}}
                {{`{{ if ne .Annotations.runbook ""}}**Runbook:** <{{ .Annotations.runbook }}|:spiral_note_pad:> }}{{ end }}`}}
                {{`{{ if ne .Annotations.summary ""}}**Summary:** {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}**Message:** {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}**Description:** {{ .Annotations.description }}{{ end }}`}}
                {{`  **Details:**`}}
                {{"  {{ range .Labels.SortedPairs }} â€¢ {{ .Name }}: `{{ .Value }}`"}}
                {{`  {{ end }}`}}
                {{`{{ end }}`}}
      route:
        receiver: 'discord'
        routes:
          - receiver: "null"
            matchers:
            - alertname="Watchdog"
            continue: false
          - receiver: 'null'
            matchers:
            - severity =~ "none"
          - receiver: 'discord'
      inhibit_rules:
        - source_matchers:
          - severity="critical"
          target_matchers:
          - severity=~"warning|info"
          equal:
          - namespace
          - alertname
        - source_matchers:
          - severity="warning"
          target_matchers:
          - severity="info"
          equal:
          - namespace
          - alertname
        - source_matchers:
          - alertname="InfoInhibitor"
          target_matchers:
          - severity="info"
          equal:
          - namespace
        - target_matchers:
          - alertname="InfoInhibitor"
  prometheus:
    enabled: true
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
    monitor:
      enabled: true
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
            - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node
    prometheusSpec:
      # logLevel: debug
      enableAdminAPI: true
      enableRemoteWriteReceiver: true
      externalLabels:
        cluster: do-k8s
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
      storageSpec:
        volumeClaimTemplate:
          spec:
            resources:
              requests:
                storage: 50Gi
      ruleSelectorNilUsesHelmValues: false
      serviceMonitorSelectorNilUsesHelmValues: false
      podMonitorSelectorNilUsesHelmValues: false
      probeSelectorNilUsesHelmValues: false
    ingress:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: '500m'
        nginx.ingress.kubernetes.io/whitelist-source-range: "216.71.199.212/32"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
        gethomepage.dev/enabled: 'true'
        gethomepage.dev/group: Monitoring
        gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/prometheus.png
        gethomepage.dev/name: Prometheus
      hosts:
        - prometheus-do.g4v.dev
  grafana:
    enabled: false
  defaultRules:
    disabled:
      # my limits are bad anyways, so don't alert me cause i went over
      KubeMemoryOvercommit: true
      KubeMemoryQuotaOvercommit: true
    rules:
      etcd: false
      kubeApiserver: false
      kubeControllerManager: false
      kubeProxy: false
      kubeSchedulerAlerting: false
      kubeSchedulerRecording: false
  kubeControllerManager:
    enabled: false
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  kubeEtcd:
    enabled: true
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  kubeScheduler:
    enabled: true
    serviceMonitor:
      relabelings:
        - action: replace
          targetLabel: cluster
          replacement: "do-k8s"
  prometheus-node-exporter:
    fullnameOverride: node-exporter
    resources:
      requests:
        cpu: 23m
        memory: 64M
      limits:
        memory: 64M
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            targetLabel: cluster
            replacement: "do-k8s"
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
  kube-state-metrics:
    fullnameOverride: kube-state-metrics
    metricLabelsAllowlist:
      - pods=[*]
      - deployments=[*]
      - persistentvolumeclaims=[*]
    prometheus:
      monitor:
        enabled: true
        relabelings:
          - action: replace
            targetLabel: cluster
            replacement: "do-k8s"
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels: ["__meta_kubernetes_pod_node_name"]
            targetLabel: kubernetes_node
  additionalPrometheusRulesMap:
    oom-rules:
      groups:
        - name: oom
          rules:
            - alert: OomKilled
              annotations:
                summary: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
              expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
              labels:
                severity: critical
