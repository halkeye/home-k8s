controllers:
  main:
    strategy: RollingUpdate
    annotations:
      reloader.stakater.com/auto: 'true'
    containers:
      searxng:
        image:
          repository: docker.io/searxng/searxng
          tag: 2024.10.4-3e747d049
        command: ['uwsgi', '--master', '--http-socket', '0.0.0.0:8080', '/usr/local/searxng/dockerfiles/uwsgi.ini']
        env:
          BASE_URL: https://search.g4v.dev
          UWSGI_WORKERS: &cpu
            valueFrom:
              resourceFieldRef:
                containerName: searxng
                divisor: 1
                resource: limits.cpu
          UWSGI_THREADS: *cpu
        envFrom:
          - secretRef:
              name: '{{.Release.Name}}-secret'
        probes:
          liveness: &probes
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /healthz
                port: 8080
              periodSeconds: 10
              timeoutSeconds: 1
              failureThreshold: 3
          readiness: *probes
          startup:
            enabled: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ['ALL']
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 10m
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 977
    runAsGroup: 977
    seccompProfile:
      type: RuntimeDefault
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: searxng
service:
  main:
    controller: main
    ports:
      http:
        port: 8080
ingress:
  main:
    enabled: true
    annotations:
      gethomepage.dev/enabled: 'true'
      gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/master/png/searxng.png
      gethomepage.dev/name: Search
      external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
      # nginx.ingress.kubernetes.io/auth-url: |-
      #   http://ak-outpost-nginx.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
      # nginx.ingress.kubernetes.io/auth-signin: |-
      #   https://auth.g4v.dev/outpost.goauthentik.io/start?rd=$escaped_request_uri
      # nginx.ingress.kubernetes.io/auth-response-headers: |-
      #   Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      # nginx.ingress.kubernetes.io/auth-snippet: |
      #   proxy_set_header X-Forwarded-Host $http_host;
    hosts:
      - host: search.g4v.dev
        paths:
          - path: /
            service:
              identifier: main
              port: http
persistence:
  config:
    enabled: true
    type: configMap
    name: '{{.Release.Name}}-config'
    globalMounts:
      - path: /etc/searxng/settings.yml
        subPath: settings.yml
        readOnly: true
      - path: /etc/searxng/limiter.toml
        subPath: limiter.toml
        readOnly: true
  tmp:
    type: emptyDir
    globalMounts:
      - path: /etc/searxng
configMaps:
  config:
    suffix: config
    data:
      limiter.toml: |-
        [real_ip]
        # Number of values to trust for X-Forwarded-For.
        x_for = 1

        # The prefix defines the number of leading bits in an address that are compared
        # to determine whether or not an address is part of a (client) network.
        ipv4_prefix = 32
        ipv6_prefix = 48

        [botdetection.ip_limit]
        # To get unlimited access in a local network, by default link-local addresses
        # (networks) are not monitored by the ip_limit
        filter_link_local = false

        # activate link_token method in the ip_limit method
        link_token = false

        [botdetection.ip_lists]
        # In the limiter, the ip_lists method has priority over all other methods -> if
        # an IP is in the pass_ip list, it has unrestricted access and it is also not
        # checked if e.g. the "user agent" suggests a bot (e.g. curl).
        block_ip = [
        ]

        pass_ip = [
          '10.0.0.0/24',
          '172.16.10.0/24',
          '104.37.60.186/32'
        ]

        # Activate passlist of (hardcoded) IPs from the SearXNG organization,
        # e.g. `check.searx.space`.
        pass_searxng_org = true
      settings.yml: |-
        ---
        use_default_settings: true

        server:
          limiter: true
          image_proxy: true
          public_instance: true
          method: GET

        redis:
          url: redis:/redis:6379

        search:
          autocomplete: duckduckgo
          default_lang: en

        general:
          instance_name: G4V Search

        ui:
          default_locale: en

        enabled_plugins:
          - Basic Calculator
          - Hash plugin
          - Hostnames plugin
          - Open Access DOI rewrite
          - Self Information
          - Tracker URL remover
          - Tor check plugin
          - Unit converter plugin

        hostnames:
          high_priority:
            - (.*)\/blog\/(.*)
            - (.*\.)?wikipedia.org$
            - (.*\.)?github.com$
            - (.*\.)?reddit.com$
            - (.*\.)?docker.com$
            - (.*\.)?askubuntu.com$
            - (.*\.)?superuser.com$
            - (.*\.)?digitalocean.com$
          replace:
            (www\.)?reddit\.com$: old.reddit.com
          remove:
            - '(.*\.)?facebook.com$'
            - '(.*\.)?x.com$'
