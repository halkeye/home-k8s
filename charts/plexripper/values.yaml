# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/library/common/values.schema.json
defaultPodOptions:
  securityContext:
    runAsUser: 1026
    runAsGroup: 100
    runAsNonRoot: true
    fsGroup: 100
    fsGroupChangePolicy: OnRootMismatch

controllers:
  main:
    strategy: Recreate
    pod:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: NotIn
                    values:
                      - arm64
    containers:
      plexripper:
        image:
          repository: plexripper/plexripper
          tag: 0.31.1
        env:
          TZ: America/Vancouver
          PUID: "1026"
          PGID: "100"
        command:
          - dotnet
          - /app/PlexRipper.WebAPI.dll
        probes:
          liveness: &probes
            enabled: true
          readiness: *probes
          startup:
            enabled: false
        resources:
          limits:
            memory: 2Gi
          requests:
            memory: 256Mi
            cpu: 10m

serviceAccount:
  create: true
  name: plexripper

service:
  main:
    controller: main
    ports:
      http:
        port: 7000

ingress:
  main:
    enabled: true
    annotations:
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Media Fetchers
      gethomepage.dev/icon: https://raw.githubusercontent.com/walkxcode/dashboard-icons/main/png/plexripper.png
      gethomepage.dev/name: Plex Ripper
      traefik.ingress.kubernetes.io/router.entrypoints: 'websecure'
      traefik.ingress.kubernetes.io/router.middlewares: 'traefik-ingress-authentik@kubernetescrd'
      nginx.ingress.kubernetes.io/auth-url: http://ak-outpost-nginx.authentik.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
      nginx.ingress.kubernetes.io/auth-signin: https://auth.g4v.dev/outpost.goauthentik.io/start?rd=$scheme://$http_host$escaped_request_uri
      nginx.ingress.kubernetes.io/auth-response-headers: Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Host $http_host;
    hosts:
      - host: plexripper.g4v.dev
        paths:
          - path: /
            service:
              identifier: main
              port: http

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: nas-apps
    globalMounts:
      - path: /Config
  downloads:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    storageClass: nas-apps
    size: "1Gi"
    globalMounts:
      - path: /Downloads
  tv:
    type: nfs
    server: 172.16.10.10
    path: /volume1/TV
    globalMounts:
      - path: /TvShows
  webseries:
    type: nfs
    server: 172.16.10.10
    path: /volume1/Webseries
    globalMounts:
      - path: /Webseries
  anime:
    type: nfs
    server: 172.16.10.10
    path: /volume1/Anime
    globalMounts:
      - path: /Anime
  movies:
    type: nfs
    server: 172.16.10.10
    path: /volume1/Movies
    globalMounts:
      - path: /movies
  anime-movies:
    type: nfs
    server: 172.16.10.10
    path: "/volume1/Anime Movies"
    globalMounts:
      - path: /Anime-Movies
