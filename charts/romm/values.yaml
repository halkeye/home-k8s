---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/library/common/values.schema.json
defaultPodOptions:
  securityContext:
    runAsUser: 1026
    runAsGroup: 100
    runAsNonRoot: true
    fsGroup: 100
    fsGroupChangePolicy: "OnRootMismatch"

controllers:
  romm:
    annotations:
      reloader.stakater.com/auto: "true"
    initContainers:
      init:
        image:
          repository: busybox
          tag: 1.37
        command:
          - sh
          - -c
          - |-
              cp /configmap/config.yml /romm/config
    containers:
      app:
        image:
          repository: ghcr.io/rommapp/romm
          tag: 4.1.2@sha256:14ddc5abbfda99fcf60db9fa124b52727518b82deae8ece63f1e1b70873f471a
        env:
          TZ: America/Vancouver
          DISABLE_USERPASS_LOGIN: true
          ENABLE_SCHEDULED_RESCAN: true
          SCHEDULED_RESCAN_CRON: "0 3 * * *"
          ROMM_DB_DRIVER: postgresql
          DB_HOST:
            valueFrom:
              secretKeyRef:
                name: "romm-db-romm"
                key: HOST_NO_PORT
          DB_PORT:
            valueFrom:
              secretKeyRef:
                name: "romm-db-romm"
                key: PORT
          DB_NAME:
            valueFrom:
              secretKeyRef:
                name: "romm-db-romm"
                key: DATABASE_NAME
          DB_USER:
            valueFrom:
              secretKeyRef:
                name: "romm-db-romm"
                key: LOGIN
          DB_PASSWD:
            valueFrom:
              secretKeyRef:
                name: "romm-db-romm"
                key: PASSWORD
          ROMM_PORT: 8080
          REDIS_HOST: redis
          REDIS_PORT: 6379
          OIDC_ENABLED: true
          OIDC_PROVIDER: authentik
          LAUNCHBOX_API_ENABLED: true
          ENABLE_SCHEDULED_UPDATE_LAUNCHBOX_METADATA: true
          HASHEOUS_API_ENABLED: true
          PLAYMATCH_API_ENABLED: true
        envFrom:
          - secretRef:
              name: romm-secret
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities: { drop: ["ALL"] }
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 3000Mi
service:
  app:
    controller: romm
    ports:
      http:
        port: 8080
ingress:
  app:
    hosts:
      - host: romm.g4v.dev
        paths:
          - path: /
            service:
              identifier: app
              port: http

persistence:
  config:
    type: emptyDir
    globalMounts:
      - path: /romm/config
  data:
    enabled: true
    suffix: data
    type: persistentVolumeClaim
    storageClass: longhorn
    accessMode: ReadWriteOnce
    size: 50Gi
    advancedMounts:
      romm:
        app:
          - subPath: "resources"
            path: "/romm/resources"
          - subPath: "assets"
            path: "/romm/assets"
  tmp:
    type: emptyDir
    globalMounts:
      - path: /tmp
  games:
    type: nfs
    server: 172.16.10.10
    path: "/volume1/Games"
    globalMounts:
      - path: /romm/library
  configmap:
    enabled: true
    type: configMap
    name: romm-configmap
