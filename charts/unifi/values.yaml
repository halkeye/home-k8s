app-template:
  controllers:
    main:
      strategy: Recreate
      containers:
        unifi:
          image:
            repository: jacobalberty/unifi
            tag: v9.0.114@sha256:d5c9f87e643854bec4d0c15f6cbeec75510a449a7ec46f1e223eded858add480
          env:
            TZ: America/Vancouver
            RUNAS_UID0: 'false'
            UNIFI_UID: '999'
            UNIFI_GID: '999'
            UNIFI_STDOUT: 'true'
            JVM_INIT_HEAP_SIZE:
            JVM_MAX_HEAP_SIZE: 1024M
          resources:
            requests:
              memory: 2Gi
              cpu: 50m
        kscb:
          image:
            repository: dkruyt/kscb
            tag: 'latest'
            pullPolicy: "Always"
          env:
            TZ: America/Vancouver
            KSCB_SRC: "/unifi/data/backup/autobackup"
            KSCB_DST: "halkeye-unifi"
          envFrom:
            - secretRef:
                name: '{{.Release.Name}}-secret'
  service:
    main:
      controller: main
      type: LoadBalancer
      externalTrafficPolicy: Local
      annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'dok8s-unifi'
        external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
      ports:
        http:
          port: 8443
          protocol: HTTPS
        controller:
          enabled: true
          port: 8080
          protocol: TCP
        portal-http:
          enabled: false
          port: 8880
          protocol: HTTP
        portal-https:
          enabled: false
          port: 8843
          protocol: HTTPS
        speedtest:
          enabled: true
          port: 6789
          protocol: TCP
        stun:
          enabled: true
          port: 3478
          protocol: UDP
        syslog:
          enabled: true
          port: 5514
          protocol: UDP
        discovery:
          enabled: true
          port: 10001
          protocol: UDP
  ingress:
    main:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: '0'
        nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
        nginx.ingress.kubernetes.io/proxy-send-timeout: '600'
        nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
        nginx.ingress.kubernetes.io/backend-protocol: 'HTTPS'
        external-dns.alpha.kubernetes.io/cloudflare-proxied: 'false'
      hosts:
        - host: unifi.g4v.dev
          paths:
            - path: /
              service:
                identifier: main
                port: http
  configMaps:
    config:
      data:
        crontab: |
          0 3 * * * rclone sync "$KSCB_SRC" "$KSCB_DST:unifi" -v --backup-dir="$KSCB_DST:unifi-old/$(date -u +"%Y-%m-%dT%H-%M-%SZ")"

  persistence:
    data:
      enabled: true
      accessMode: ReadWriteOnce
      size: 5Gi
      globalMounts:
        - path: /unifi
    kscbrclone:
      enabled: true
      type: secret
      name: '{{ .Release.Name }}-secret'
      advancedMounts:
        main:
          kscb:
            - path: /config/rclone/rclone.conf
              readOnly: true
              subPath: rclone.conf
    configs:
      enabled: true
      type: configMap
      name: '{{ .Release.Name }}-config'
      globalMounts:
        - path: /crontab
          subPath: crontab
          readOnly: true
