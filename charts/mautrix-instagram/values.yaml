app-template:
  provisioning_shared_secret: "foo"
  login_shared_secret: "login_shared_secret"
  as_token: "This value is generated when generating the registration"
  hs_token: "This value is generated when generating the registration"

  controllers:
    main:
      annotations:
        reloader.stakater.com/auto: "true"
      type: deployment
      replicas: 1
      strategy: Recreate
      initContainers:
        01-init:
          image:
            # probably already downloaded, and includes envsubst
            repository: nginx
            tag: 1.28.0
          env:
            TZ: America/Vancouver
            MAUTRIX_DB_URI:
              valueFrom:
                secretKeyRef:
                  name: "{{.Release.Name }}-db-secret-{{.Release.Name }}"
                  key: POSTGRES_URL
          command:
            - bash
            - -c
            - |-
                cat /secrets/config.yaml | envsubst > /data/config.yaml
                find /secrets
                find /data
                cat /data/config.yaml
      containers:
        main:
          image:
            repository: dock.mau.dev/mautrix/meta
            tag: v0.4.6
          env:
            TZ: America/Vancouver
          command:
            - "/usr/bin/mautrix-meta"
            - "-c"
            - "/data/config.yaml"
          probes:
            liveness:
              enabled: false
              custom: true
              spec:
                httpGet:
                  path: /_matrix/mau/live
                  port: 29319
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            readiness:
              enabled: false
              custom: true
              spec:
                httpGet:
                  path: /_matrix/mau/ready
                  port: 29319
                initialDelaySeconds: 0
                periodSeconds: 10
                timeoutSeconds: 1
                failureThreshold: 3
            startup:
              enabled: false
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 100Mi
      pod:
        securityContext:
          runAsUser: 1337
          runAsGroup: 1337
          runAsNonRoot: true
          fsGroup: 1337
          fsGroupChangePolicy: OnRootMismatch
  service:
    main:
      controller: main
      publishNotReadyAddresses: true
      ports:
        http:
          port: 29319

  persistence:
    tmp:
      enabled: true
      type: emptyDir
    data:
      enabled: true
      type: emptyDir
    secrets:
      enabled: true
      type: secret
      name: "{{ .Release.Name }}-secret"

  secrets:
    secret:
      enabled: true
      suffix: secret
      stringData:
        config.yaml: |-
          # Network-specific config options
          network:
              mode: instagram
              displayname_template: "{{`{{ or .DisplayName .Username \"Unknown user\" }} (IG)`}}"

          bridge:
              permissions:
                "*": relay
                "g4v.dev": user
                "@halkeye:g4v.dev": admin

          # Config for the bridge's database.
          database:
              type: postgres
              uri: "$MAUTRIX_DB_URI"

          # Homeserver details.
          homeserver:
              address: "http://synapse.matrix.svc.cluster.local.:8008"
              domain: g4v.dev
              # Does the homeserver support https://github.com/matrix-org/matrix-spec-proposals/pull/2246?
              async_media: true

          # Application service host/registration related details.
          # Changing these values requires regeneration of the registration (except when noted otherwise)
          appservice:
              address: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local.:29319"
              hostname: 0.0.0.0
              port: 29319
              # Authentication tokens for AS <-> HS communication. Autogenerated; do not modify.
              as_token: "{{ .Values.as_token }}"
              hs_token: "{{ .Values.hs_token }}"
              # The unique ID of this appservice.
              id: instagram
              username_template: {{`instagram_{{.}}`}}
              # Appservice bot details.
              bot:
                  username: instagrambot
                  displayname: Instagram bridge bot


          # Settings for provisioning API
          provisioning:
              shared_secret: "{{ .Values.provisioning_shared_secret }}"

          double_puppet:
              secrets:
                  g4v.dev: "{{ .Values.login_shared_secret }}"

          # Logging config. See https://github.com/tulir/zeroconfig for details.
          logging:
              min_level: debug
              writers:
                  - type: stdout
                    format: pretty-colored

          encryption:
              allow: false
              default: false
              pickle_key: {{ .Values.encryption_pickle_key }}
